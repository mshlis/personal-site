{"version":3,"file":"static/js/953.e0f59e8a.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","data/resume/references.js","components/Resume/References.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n    <ul>{data.points.map((point) => (\n      <li key={point}>{point}</li>\n    ))}\n    </ul>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h2>Education</h2>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h3><a href={data.link}>{data.company}</a> - {data.position}</h3>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n    {data.projects.map((proj) => (\n      <div className=\"key-proj\">\n        <h4>KEY PROJECT: {proj.name}</h4>\n        {proj.points.map((ppoint) => (\n          <li key={ppoint}>{ppoint}</li>\n        ))}\n        <br />\n      </div>\n    ))}\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n    projects: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      points: PropTypes.arrayOf(PropTypes.string),\n    })),\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"industry\">\n    <div className=\"link-to\" id=\"industry\" />\n    <div className=\"title\">\n      <h2>INDUSTRY</h2>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n    projects: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      points: PropTypes.arrayOf(PropTypes.string),\n    })),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, title } = data;\n\n  // TODO: Consider averaging colors\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  // const barStyle = {\n  //   ...titleStyle,\n  //   width: '10%',\n  // };\n  return (<div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>);\n\n  // return (\n  //   <div className=\"skillbar\">\n  //     <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\n  //     {/* <div className=\"skillbar-bar\" style={titleStyle} /> */}\n  //     {/* <div className=\"skill-bar-percent\">{competency} / 5</div> */}\n  //   </div>\n  // );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst handleProps = ({ categories, skills }) => ({\n  buttons: categories.map((cat) => cat.name).reduce((obj, key) => ({\n    ...obj,\n    [key]: false,\n  }), { All: true }),\n  skills,\n});\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = handleProps({ categories: props.categories, skills: props.skills });\n  }\n\n  getRows() {\n    // search for true active categories\n    const actCat = Object.keys(this.state.buttons).reduce((cat, key) => (\n      this.state.buttons[key] ? key : cat\n    ), 'All');\n\n    return this.state.skills.sort((a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    }).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <SkillBar\n          categories={this.props.categories}\n          data={skill}\n          key={skill.title}\n        />\n      ));\n  }\n\n  getButtons() {\n    return Object.keys(this.state.buttons).map((key) => (\n      <CategoryButton\n        label={key}\n        key={key}\n        active={this.state.buttons}\n        handleClick={this.handleChildClick}\n      />\n    ));\n  }\n\n  handleChildClick = (label) => {\n    this.setState((prevState) => {\n      // Toggle button that was clicked. Turn all other buttons off.\n      const buttons = Object.keys(prevState.buttons).reduce((obj, key) => ({\n        ...obj,\n        [key]: (label === key) && !prevState.buttons[key],\n      }), {});\n      // Turn on 'All' button if other buttons are off\n      buttons.All = !Object.keys(prevState.buttons).some((key) => buttons[key]);\n      return { buttons };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"skills\">\n        <div className=\"link-to\" id=\"skills\" />\n        <div className=\"title\">\n          <h2>Skills</h2>\n          <p>Nothing better to describe this section than a hodgepodge of concepts and\n            tools I&apos;ve used\n          </p>\n        </div>\n        <div className=\"skill-button-container\">\n          {this.getButtons()}\n        </div>\n        <div className=\"skill-row-container\">\n          {this.getRows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      {/* <h4 className=\"course-number\">{data.number}:</h4> */}\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h2>Selected Courses</h2>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","const references = ['[1] S. D.-H. Michael Shliselberg, RIET Lab at CheckThat! 2022: improving decoder based re-ranking for claim matching, in: Working Notes of CLEF 2022 - Conference and Labs of the Evaluation Forum, CLEF ’2022, Bologna, Italy, 2022.'];\n\nexport default references;\n","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport references from '../../data/resume/references';\n\nconst References = () => (\n  <div className=\"references\" id=\"references\">\n    <div className=\"title\">\n      <h2>References</h2>\n    </div>\n    {references.map((ref) => (ref))}\n  </div>\n);\n\nexport default References;\n","const courses = [\n  {\n    title: 'Natural Language Processing',\n  },\n  {\n    title: 'Bayesian Statistics',\n  },\n  {\n    title: 'Statistical Machine Learning',\n  },\n  {\n    title: 'Statistical Decision Theory',\n  },\n  {\n    title: 'Coding Theory',\n  },\n  {\n    title: 'Probability & Stochastic Processes',\n  },\n  {\n    title: 'Data Mining',\n  },\n  {\n    title: 'Algorithms for Big Data',\n  },\n  {\n    title: 'Information Ecosystem Threats',\n  },\n  {\n    title: 'Partial Differential Equations',\n  },\n  {\n    title: 'Software Intensive Engineering',\n  },\n  {\n    title: 'Applied Scientific Computing',\n  },\n  {\n    title: 'Data Structures & Algorithms',\n  },\n  {\n    title: 'Discrete Structures',\n  },\n  {\n    title: 'Abstract Algebra',\n  },\n  {\n    title: 'Digital Signal Processing',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'University of Connecticut',\n    degree: 'PhD in Computer Science; RIET Lab under Professor Shiri Dori-Hacohen',\n    link: 'https://infothreats.cse.uconn.edu/our-team/',\n    year: '2021 - Current',\n    points: [\n      'Built pipeline for on-premises twitter data-lake that is used for ad-hoc investigations into disinformation.',\n      'Devised a language model optimization scheme for Claim-Matching that assists our non-profit fact-checking partner Meeden that also placed first in CLEF CheckThat! 2022 Competition [1]. Open sourced pytorch codebase for freeuse and reproducibility,',\n      'Currently researching argumentation-based tasks like Claim Extraction and Relation Classification to further enhance automated campaign classification and detection.',\n    ],\n  },\n  {\n    school: 'University of Massachusetts Amherst',\n    degree: 'B.S. in Computer Engineering & Applied Mathematics',\n    link: 'https://www.umass.edu/',\n    year: '2014 - 2018',\n    points: [],\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Amazon.com; Alexa org',\n    position: 'Software Developer Engineer II (L5)',\n    link: 'https://amazon.com',\n    daterange: 'Summer 2020 - Summer 2021',\n    points: [\n      'Designed data pipelines and service architectures while articulating them to peers and managers in open forum reviews',\n      'Led project to rewrite an open source BI tool to handle Red/Critical data in a secure and scalable fashion',\n      'Worked with customers to determine and build dashboarding functionalities that would save them dev time',\n      'Developed and maintained internal services needed for research scientists to efficiently access and query Alexa data',\n    ],\n    projects: [],\n  },\n  {\n    company: 'Systems & Technology Research',\n    position: 'Machine Learning Researcher',\n    link: 'https://www.str.us/',\n    daterange: 'Spring 2018 - Summer 2020',\n    points: [],\n    projects: [\n      {\n        name: 'Group Dynamics',\n        points: [\n          'Designed a language model to classify stubbornness and suspiciousness from dialogue',\n          'Wrote a context dependent text-generator using both MLE and adversarial training regimes',\n          'Developed an RNN with a GPT2 backbone that works on threads and dynamically learns author embeddings',\n          'Presented research results to government stakeholders at DARPA',\n        ],\n      },\n      {\n        name: 'Physically Realizable Attacks',\n        points: [\n          'Developed a pipeline to perform Expectation-of-Transformation (EoT) attack experiments in a variety of domains',\n          'Demonstrated that Black Box settings can still work in an EoT setup that is physically realizable',\n          'Created internal tool to perform feature and model visualizations that helped understand experiment results',\n          'Fooled both state-of-the-art Object Detectors and Classifiers with physical attacks',\n        ],\n      },\n      {\n        name: 'Middle East Event Detection',\n        points: [\n          'Applied computer vision techniques to learn representations of geolocations based on recorded event data',\n          'Used both probabilistic and neural NLP techniques to draw and extract relevant information from tweets',\n          'Implemented Graph based deep learning approaches to handle non-uniform quantization of positions',\n          'Presented research results to government stakeholders at IARPA',\n        ],\n      },\n    ],\n  },\n];\n\nexport default positions;\n","// TODO: Add Athletic Skills, Office Skills,\n// Data Engineering, Data Science, ML Engineering, ... ?\n\nconst skills = [\n  {\n    title: 'JS/TS',\n    category: ['Languages', 'Frontend'],\n  },\n  {\n    title: 'React',\n    category: ['Frontend', 'Frameworks'],\n  },\n  {\n    title: 'React Native',\n    category: ['Frontend', 'Frameworks'],\n  },\n  {\n    title: 'Bash',\n    category: ['Tools', 'Languages'],\n  },\n  {\n    title: 'Java/Kotlin',\n    category: ['Backend'],\n  },\n  {\n    title: 'MongoDB',\n    category: ['Databases'],\n  },\n  {\n    title: 'ElasticSearch',\n    category: ['Databases', 'AWS'],\n  },\n  {\n    title: 'SQL',\n    category: ['Databases', 'Languages'],\n  },\n  {\n    title: 'Redis',\n    category: ['Databases', 'AWS'],\n  },\n  {\n    title: 'EC2',\n    category: ['AWS', 'Compute'],\n  },\n  {\n    title: 'DynamoDB',\n    category: ['Databases', 'AWS'],\n  },\n  {\n    title: 'Amplify',\n    category: ['Backend', 'AWS'],\n  },\n  {\n    title: 'Glue',\n    category: ['Tools', 'AWS'],\n  },\n  {\n    title: 'CloudFormation',\n    category: ['Tools', 'AWS'],\n  },\n  {\n    title: 'SNS',\n    category: ['Tools', 'AWS'],\n  },\n  {\n    title: 'SQS',\n    category: ['Tools', 'AWS'],\n  },\n  {\n    title: 'AppSync',\n    category: ['Tools', 'AWS', 'Backend'],\n  },\n  {\n    title: 'Route 53',\n    category: ['AWS'],\n  },\n  {\n    title: 'AWS API Gateway',\n    category: ['AWS', 'Backend'],\n  },\n  {\n    title: 'SageMaker',\n    category: ['Machine Learning', 'AWS'],\n  },\n  {\n    title: 'Secrets Manager',\n    category: ['AWS'],\n  },\n  {\n    title: 'Redshift',\n    category: ['Databases', 'AWS'],\n  },\n  {\n    title: 'RDS',\n    category: ['Databases', 'AWS'],\n  },\n  {\n    title: 'S3',\n    category: ['Databases', 'AWS'],\n  },\n  {\n    title: 'Flask',\n    category: ['Frameworks', 'Backend'],\n  },\n  {\n    title: 'Git',\n    category: ['Tools'],\n  },\n  {\n    title: 'Kubernetes',\n    category: ['Tools', 'Compute', 'Backend'],\n  },\n  {\n    title: 'ECS + Fargate',\n    category: ['Tools', 'AWS', 'Compute', 'Backend'],\n  },\n  {\n    title: 'AWS Lambda',\n    category: ['AWS', 'Compute'],\n  },\n  {\n    title: 'AWS CDK',\n    category: ['AWS', 'Tools'],\n  },\n  {\n    title: 'Docker',\n    category: ['Tools'],\n  },\n  {\n    title: 'Tensorflow 1/2 + Keras',\n    category: ['Frameworks', 'Machine Learning'],\n  },\n  {\n    title: 'PyTorch',\n    category: ['Frameworks', 'Machine Learning'],\n  },\n  {\n    title: 'HTML + CSS',\n    category: ['Languages', 'Frontend'],\n  },\n  {\n    title: 'Python',\n    category: ['Languages', 'Backend'],\n  },\n  {\n    title: 'C++',\n    category: ['Languages'],\n  },\n  {\n    title: 'RLlib',\n    category: ['Frameworks'],\n  },\n  {\n    title: 'Julia',\n    category: ['Languages'],\n  },\n  {\n    title: 'Fortran 90/95',\n    category: ['Languages'],\n  },\n  {\n    title: 'C',\n    category: ['Languages'],\n  },\n  {\n    title: 'Scheme',\n    category: ['Languages'],\n  },\n  {\n    title: 'MATLAB',\n    category: ['Languages'],\n  },\n  {\n    title: 'R',\n    category: ['Languages'],\n  },\n  {\n    title: 'Neo4j',\n    category: ['Databases'],\n  },\n  {\n    title: 'Neptune',\n    category: ['Databases', 'AWS'],\n  },\n  {\n    title: 'Spark',\n    category: ['Frameworks'],\n  },\n  {\n    title: 'Computer Vision',\n    category: ['Machine Learning'],\n  },\n  {\n    title: 'Natural Language Processing',\n    category: ['Machine Learning'],\n  },\n  {\n    title: 'Reinforcement Learning',\n    category: ['Machine Learning'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of colors that I like. The length should be == to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7b',\n];\n\nconst categories = [\n  ...new Set(skills.reduce((acc, { category }) => acc.concat(category), [])),\n]\n  .sort()\n  .map((category, index) => ({\n    name: category,\n    color: colors[index],\n  }));\n\nexport { categories, skills };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\nimport References from '../components/Resume/References';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Industry',\n  'Skills',\n  'Courses',\n  'References',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Experience\"\n    description=\"Michael S. Eperience\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Experience</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec, index) => (\n              <a href={`#${sec.toLowerCase()}`}><b>{sec.toUpperCase()}</b>{index === sections.length - 1 ? '' : ' - '}</a>\n            ))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <br />\n      <Experience data={positions} />\n      <br />\n      <Skills skills={skills} categories={categories} />\n      <br />\n      <Courses data={courses} />\n      <br />\n      <References />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","degree","href","link","school","year","points","map","point","Education","id","defaultProps","company","position","daterange","projects","proj","name","ppoint","Experience","job","handleClick","active","label","type","onClick","SkillBar","categories","category","title","titleStyle","background","filter","cat","includes","color","style","Skills","props","handleChildClick","setState","prevState","buttons","Object","keys","reduce","obj","key","All","some","state","skills","handleProps","actCat","this","sort","a","b","ret","competency","skill","getButtons","getRows","Component","Course","last","courses","university","number","course","idx","length","Courses","references","ref","colors","Set","acc","concat","index","sections","Main","description","to","sec","toLowerCase","toUpperCase","degrees","positions"],"sourceRoot":""}